-- MySQL Script generated by MySQL Workbench
-- 10/21/16 16:28:17
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema ambar_bd
-- -----------------------------------------------------
-- Banco de dados do software Âmbar, desenvolvido pela equipe Sigma.
-- Desenvolvedores:
-- João Pedro Ferreira Santucci
-- Lucas Vinícius Bublitz
-- Filipe Cattoni Elias
-- Vinícius Zomer

-- -----------------------------------------------------
-- Schema ambar_bd
--
-- Banco de dados do software Âmbar, desenvolvido pela equipe Sigma.
-- Desenvolvedores:
-- João Pedro Ferreira Santucci
-- Lucas Vinícius Bublitz
-- Filipe Cattoni Elias
-- Vinícius Zomer
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ambar_bd` DEFAULT CHARACTER SET utf8 ;
USE `ambar_bd` ;

-- -----------------------------------------------------
-- Table `ambar_bd`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ambar_bd`.`users` ;

CREATE TABLE IF NOT EXISTS `ambar_bd`.`users` (
  `id` INT(6) UNSIGNED ZEROFILL NOT NULL AUTO_INCREMENT COMMENT 'ID do usuário.',
  `user` VARCHAR(20) NOT NULL COMMENT 'Nome do usuário.',
  `password` VARCHAR(32) NOT NULL COMMENT 'Senha do usuário, hasheada em MD5 com salt.',
  `permission` TINYINT(1) UNSIGNED NOT NULL COMMENT 'Permissão do usuário.\n0 - admin\n1 - cliente',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Usuários do software.';


-- -----------------------------------------------------
-- Table `ambar_bd`.`clients`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ambar_bd`.`clients` ;

CREATE TABLE IF NOT EXISTS `ambar_bd`.`clients` (
  `id` INT(6) ZEROFILL UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'ID do cliente.',
  `users_id` INT(6) UNSIGNED ZEROFILL NOT NULL,
  `name` VARCHAR(50) NOT NULL COMMENT 'Nome completo do cliente.',
  `email` VARCHAR(90) NOT NULL COMMENT 'E-mail do cliente.',
  PRIMARY KEY (`id`),
  INDEX `fk_clients_users_idx` (`users_id` ASC),
  CONSTRAINT `fk_clients_users`
    FOREIGN KEY (`users_id`)
    REFERENCES `ambar_bd`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Clientes que utilizam o software.';


-- -----------------------------------------------------
-- Table `ambar_bd`.`equipment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ambar_bd`.`equipment` ;

CREATE TABLE IF NOT EXISTS `ambar_bd`.`equipment` (
  `id` TINYINT ZEROFILL NOT NULL AUTO_INCREMENT COMMENT 'ID do equipamento.',
  `name` VARCHAR(30) NOT NULL COMMENT 'Nome do equipamento (televisão, chuveiro, etc.)',
  `image_url` VARCHAR(255) NOT NULL COMMENT 'URL de uma imagem do equipamento.',
  `power` INT(5) UNSIGNED NOT NULL COMMENT 'Potência media do equipamento, em watts.',
  `use_time` TIME NOT NULL COMMENT 'Tempo medio utilizado por dia, em horas.',
  `consumption_type` TINYINT(1) UNSIGNED NOT NULL COMMENT 'Tipo de consumo do equipamento.\n0 - compartilhado\n1 - individual',
  `sug_time_1` TEXT NOT NULL,
  `sug_time_2` TEXT NOT NULL,
  `sug_time_3` TEXT NOT NULL,
  `sug_time_4` TEXT NOT NULL,
  `sug_power_1` TEXT NOT NULL,
  `sug_power_2` TEXT NOT NULL,
  `sug_power_3` TEXT NOT NULL,
  `normal_time_1` TIME NOT NULL,
  `normal_time_2` TIME NOT NULL,
  `normal_time_3` TIME NOT NULL,
  `normal_power_1` INT(5) UNSIGNED NOT NULL,
  `normal_power_2` INT(5) UNSIGNED NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Equipamentos cadastrados pelos administradores.';


-- -----------------------------------------------------
-- Table `ambar_bd`.`room`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ambar_bd`.`room` ;

CREATE TABLE IF NOT EXISTS `ambar_bd`.`room` (
  `id` TINYINT(2) ZEROFILL UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'ID do cômodo.',
  `name` VARCHAR(15) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Cômodos da casa onde os equipamentos podem ser cadastrados.';


-- -----------------------------------------------------
-- Table `ambar_bd`.`consumption`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ambar_bd`.`consumption` ;

CREATE TABLE IF NOT EXISTS `ambar_bd`.`consumption` (
  `id` INT(7) ZEROFILL UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'ID do consumo.',
  `clients_id` INT(6) ZEROFILL UNSIGNED NOT NULL,
  `year` INT(4) UNSIGNED ZEROFILL NOT NULL COMMENT 'Ano do consumo.',
  `month` TINYINT(2) UNSIGNED ZEROFILL NOT NULL COMMENT 'Mês do consumo.',
  `consumption` DECIMAL(5,2) UNSIGNED NOT NULL COMMENT 'Consumo do mês, em kWh.',
  PRIMARY KEY (`id`),
  INDEX `fk_consumption_clients1_idx` (`clients_id` ASC),
  CONSTRAINT `fk_consumption_clients1`
    FOREIGN KEY (`clients_id`)
    REFERENCES `ambar_bd`.`clients` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Registro dos consumos totais mensais dos clientes.';


-- -----------------------------------------------------
-- Table `ambar_bd`.`client_equipment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ambar_bd`.`client_equipment` ;

CREATE TABLE IF NOT EXISTS `ambar_bd`.`client_equipment` (
  `id` INT(7) ZEROFILL UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'ID do equipamento.',
  `equipment_id` TINYINT ZEROFILL NOT NULL COMMENT 'ID do tipo de equipamento.',
  `clients_id` INT(6) ZEROFILL UNSIGNED NOT NULL COMMENT 'ID do cliente.',
  `room_id` TINYINT(2) ZEROFILL UNSIGNED NOT NULL COMMENT 'ID do cômodo que tem o equipamento.',
  `name` VARCHAR(45) NOT NULL COMMENT 'Nome do equipamento.',
  `power` INT(5) UNSIGNED NOT NULL COMMENT 'Potência do equipamento.',
  `number_of_people` TINYINT(2) UNSIGNED NOT NULL COMMENT 'Número de pessoas que utilizam o equipamento.',
  `use_time` TIME NOT NULL COMMENT 'Tempo utilizado por dia por pessoa, em horas.',
  PRIMARY KEY (`id`),
  INDEX `fk_equipment_has_clients_clients1_idx` (`clients_id` ASC),
  INDEX `fk_equipment_has_clients_equipment1_idx` (`equipment_id` ASC),
  INDEX `fk_client_equipment_room1_idx` (`room_id` ASC),
  CONSTRAINT `fk_equipment_has_clients_equipment1`
    FOREIGN KEY (`equipment_id`)
    REFERENCES `ambar_bd`.`equipment` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_equipment_has_clients_clients1`
    FOREIGN KEY (`clients_id`)
    REFERENCES `ambar_bd`.`clients` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_client_equipment_room1`
    FOREIGN KEY (`room_id`)
    REFERENCES `ambar_bd`.`room` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Equipamento pertencido ao cliente.';


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
